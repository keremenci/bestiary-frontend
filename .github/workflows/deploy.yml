name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/keremenci/bestiary-frontend
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build, tag and push frontend Docker image
      run: |
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG

    - name: SCP the frontend compose yaml to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: bestiary
        key: ${{ secrets.EC2_DEPLOYER_SSH_KEY }}
        source: "docker-compose.yml"
        target: "/home/bestiary/frontend"

    - name: SSH to EC2 and deploy frontend
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: bestiary
        key: ${{ secrets.EC2_DEPLOYER_SSH_KEY }}
        envs: IMAGE_NAME, IMAGE_TAG
        script_stop: true
        script: |
          mkdir -p frontend
          docker network create bestiary_network || true
          echo "IMAGE_NAME=$IMAGE_NAME" > frontend/.env
          echo "IMAGE_TAG=$IMAGE_TAG" >> frontend/.env
          docker compose -f frontend/docker-compose.yml config
          docker compose -f frontend/docker-compose.yml down
          docker compose -f frontend/docker-compose.yml up -d